#!/usr/bin/bash

# Only tested for:
# Lenovo Yoga Slim 7i Aura Edition
# KDE Plasma (Wayland) in OpenSUSE Tumbleweed

PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin"
TMP="/tmp/yoga-sleep-wake"
SLEEP_STATE_FILE="$TMP/sleeping"
KBD_BRIGHTNESS_FILE="/sys/class/leds/platform::kbd_backlight/brightness"
WIFI_STATE_FILE="$TMP/wifi_state"
BT_STATE_FILE="$TMP/bluetooth_state"
KBD_STATE_FILE="$TMP/kbd_backlight_state"

if [ "$EUID" -eq 0 ]; then
	echo "You shouldn't run this as root." >&2
	exit 1
fi

# Writes to stderr when program isn't available and exits
# Writes to /dev/null when program is available
{ which rfkill && which brightnessctl && which loginctl && which kscreen-doctor || exit 1; } >/dev/null

if [ ! -f "$KBD_BRIGHTNESS_FILE" ] ; then
	echo Could not find the keyboard brightness file.
	exit 1
fi

rm -r /tmp/yoga-sleep-wake
mkdir -p "$TMP" || exit 1

_is_radio_blocked() {
	if rfkill list "$1" | grep -q "Soft blocked: no"; then
		echo "enabled"
	else
		echo "disabled"
	fi
}

KBD_BRIGHTNESS=
_set_backlight() {
	declare -g KBD_BRIGHTNESS="$1"
	brightnessctl s "$1" -d "platform::kbd_backlight" >/dev/null
}

_get_backlight() {
	# Sometimes works, sometimes doesn't.
	# Guaranteed to just output `0` after the first read, so cache it instead
	# Now let's hope it doesn't output `0` on the first read...
	if [ "$KBD_BRIGHTNESS" == "" ]; then
		out=$(brightnessctl g -d platform::kbd_backlight)
		declare -g KBD_BRIGHTNESS="$out"
	fi
	echo "$KBD_BRIGHTNESS"
}

_suspend() {
	# Check if already in custom sleep state
	if [ -f "$SLEEP_STATE_FILE" ]; then
		exit 0
	fi

	# Create sleep state file
	date > "$SLEEP_STATE_FILE"

	_get_backlight > "$KBD_STATE_FILE"

	# Save current states before turning them off
	_is_radio_blocked wifi > "$WIFI_STATE_FILE"
	_is_radio_blocked bluetooth > "$BT_STATE_FILE"

	rfkill block wifi
	rfkill block bluetooth
	_set_backlight 0

	kscreen-doctor --dpms off
	loginctl lock-session

	SELF_PID=$$

	EXCLUDE="systemd|dbus-daemon"

	#sleep 2

	#pgrep -u "$USER" -x | while read -r pid; do
	#	pname=$(ps -p "$pid" -o comm=)
	#	if [[ "$pid" -ne "$SELF_PID" ]] && ! [[ $pname =~ ^($EXCLUDE)$ ]]; then
			#kill -STOP "$pid"
			#echo $pid, $pname
#		fi
#	done
}

unblock_if_blocked_prev() {
	if [ -f "$1" ]; then
		if [ "$(cat "$1")" == "enabled" ]; then
			rfkill unblock "$2"
		fi
		rm "$1"
	fi
}

_wake() {
	if [ ! -f "$SLEEP_STATE_FILE" ]; then
		exit 0
	fi

	rm "$SLEEP_STATE_FILE"

	kscreen-doctor --dpms on

	unblock_if_blocked_prev "$WIFI_STATE_FILE" "wifi"
	unblock_if_blocked_prev "$BT_STATE_FILE" "bluetooth"

	# Restore keyboard backlight
	if [ -f "$KBD_STATE_FILE" ]; then
		_set_backlight "$(cat "$KBD_STATE_FILE")"
		rm "$KBD_STATE_FILE"
	fi

	#SELF_PID=$$
	#EXCLUDE="zsh|systemd|niri|acpid|swaylock|swayidle|dbus-daemon|nvim|yazi|kitty"

	#pgrep -u "$USER" -x | while read -r pid; do
	#	pname=$(ps -p "$pid" -o comm=)
	#	if [[ "$pid" -ne "$SELF_PID" ]] && ! [[ $pname =~ ^($EXCLUDE)$ ]]; then
	#		kill -CONT "$pid"
	#	fi
	#done
}


# Begin listening for sleep events
while read -r line
do
    case "$line" in
        *"boolean true"*) _suspend;;
        *"boolean false"*) _wake;;
    esac
done < <(dbus-monitor --system "type='signal',path=/org/freedesktop/UPower" 2>&1 | grep --line-buffered -A1 LidIsClosed)

